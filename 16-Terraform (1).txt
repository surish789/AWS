Terraform:
->Developed by Hashicorp - (Hashicorp language) - HCL(.tf)
->It is a orchestration tool
->Infrastructure as a tool(We can build total infra unsing terraform)
->Multiplatform tool (Allows all Cloud platform)
-> In AWS we use Cloudformation, In Azure we use ARM Templates
->Terraform is a tool for building, changing, and versioning infrastructure efficiently and safely. 
  It allows you to manage your infrastructure as code, meaning you can define and provision resources such as 
  servers, databases, and networks using a simple declarative language.
->Satrting to Ending total deployment purpose we use orchestraion tool.
---------------------------------------------------------------------------------------------------------------
->Main Commands: Init, Validate, Plan, Apply, Destroy
---------------------------------------------------------------------------------------------------------------
->Componants: Providers, Resourse, Variables, State file, Modules
---------------------------------------------------------------------------------------------------------------
->We need to download terraform compiler for integration purpose (we called terrafoem binary file)
  Download terraform file and extract it, without Binary file we cannot run the terraform.
  Copy this terraform binary file in one folder - now open that folder in VS Code  
->Edit System environmental variables -Select path edit:add new path of this binary file in user and system variable
---------------------------------------------------------------------------------------------------------------

->We can use VS Code for writing code.
->code purpose we use terraform registry-> Select AWS-> Documentation-> Copy Provider code
--------------------------------------------------------------------------------------------------------------

   provider "aws" {
  region     = "us-east-1"
  access_key = "AWS_ACCESS_KEY"
  secret_key = "AWS_SECRET_KEY"
}
---------------------------------------------------------------------------------------------------------------
->Now we need to mension Providers-Cloud/AccountID-Region,Access-key,Secret-key
  And also we need to create One user give permissions and Copy Access-key,Secret-key
  (Access key- AKIAW4OFZFTU4OKJDOOO)
  (Secret key- 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)
->Ec2_instance - Copy instance code paste in terraform(Change details)
---------------------------------------------------------------------------------------------------------------  
provider "aws" {
  region     = "us-east-1"
  access_key = "AWS_ACCESS_KEY"
  secret_key = "AWS_SECRET_KEY"
}
resource "aws_instance" "Flipcart" {
  ami                    = "ami-0cf10cdf9fcd62d37"
  instance_type          = "t2.micro"
  subnet_id              = aws_subnet.pavan_subnet.id
  vpc_security_group_ids = [aws_security_group.pavan-vpc-sg.id]

  tags = {
    Name = "Flipcart"
  }
}

resource "aws_vpc" "pavan_vpc" {
  cidr_block = "192.168.0.0/16"
}
resource "aws_subnet" "pavan_subnet" {
  vpc_id            = aws_vpc.pavan_vpc.id
  cidr_block        = "192.168.1.0/24"
  availability_zone = "us-east-1a"
}

resource "aws_internet_gateway" "pavan-igw" {
  vpc_id = aws_vpc.pavan_vpc.id

  tags = {
    Name = "pavan-igw"
  }
}

resource "aws_route_table" "pavan-rt" {
  vpc_id = aws_vpc.pavan_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.pavan-igw.id
  }
  tags = {
    Name = "pavan-rt"
  }
}
resource "aws_route_table_association" "pavan-rt_ass" {
  subnet_id      = aws_subnet.pavan_subnet.id
  route_table_id = aws_route_table.pavan-rt.id
}

resource "aws_security_group" "pavan-vpc-sg" {
  name   = "pavan-vpc-sg"
  vpc_id = aws_vpc.pavan_vpc.id

  ingress {
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
}
---------------------------------------------------------------------------------------------------------------
->  Open Terminal or CMD go to location -
    Terraform init- dependencies execution
    Terraform Plan- Infra creation code plan
    Terraform Apply- Plan Apply
---------------------------------------------------------
Diff btw Ingress and egress
Ingress enables external traffic to reach containers, 
while egress enables containers to reach external resources.

